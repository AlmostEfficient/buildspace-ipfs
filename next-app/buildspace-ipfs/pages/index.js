import Head from "next/head";
import React, { useState, useEffect } from "react";
import items from "./api/items.json";
import CreateItem from "../components/CreateItem";
import Item from "../components/Item";

// Constants
const TWITTER_HANDLE = "_buildspace";
const TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;

export default function App() {
    const [memes, setMemes] = useState([]);
    const [creating, setCreating] = useState(false);
    const [viewItems, setViewItems] = useState(false);

    useEffect(() => {
        setMemes(items);
    }, []);

    const renderItemContainer = () => {
        return memes.map((meme) => <Item key={meme.id} item={meme} />);
    };

    // return (
    //     <div className="container">
    //         <Head>
    //             <title>Buildspace IPFS Beam-Up</title>
    //             <meta name="description" content="Generated by @_buildspace" />
    //             <link rel="icon" href="/favicon.ico" />
    //         </Head>
    //         <header className="header-container">
    //             <button className="cta-button" onClick={() => setCreating(!creating)}>
    //                 {creating ? "Back" : "Create Product"}
    //             </button>
    //             <button className="cta-button" onClick={() => setViewItems(!viewItems)}>
    //                 {viewItems ? "Back" : "View Items"}
    //             </button>
    //         </header>

    //         <main className="container">
    //             {creating && <CreateItem />}
    //             {viewItems && renderItemContainer()}
    //         </main>

    //         <div className="footer-container">
    //             <img alt="Twitter Logo" className="twitter-logo" src="twitter-logo.svg" />
    //             <a className="footer-text" href={TWITTER_LINK} target="_blank" rel="noreferrer">{`built on @${TWITTER_HANDLE}`}</a>
    //         </div>
    //     </div>
    // );

    return (
        <div className="container">
            <h1 className="site-title">Raza's Wall of Fame</h1>
            <button className="cta-button button-glow">Connect wallet</button>

            <section className="grid">{renderItemContainer()}</section>

            <footer>
                <p className="footer-text">
                    buildspace <span className="footer-x">âœ•</span> IPFS
                </p>
            </footer>
        </div>
    );
}
